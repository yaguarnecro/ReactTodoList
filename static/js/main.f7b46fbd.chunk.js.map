{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","type","checked","onChange","TodoList","todos","map","KEY","App","useState","setTodos","todoTaskRef","useRef","useEffect","localStorage","setItem","JSON","stringify","storedTodos","parse","getItem","newTodos","find","ref","placeholder","onClick","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"8KAEO,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAErBC,EAAqBF,EAArBE,GAAIC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,UAMjB,OACI,+BACA,uBAAOC,KAAK,WAAWC,QAASF,EAAWG,SANxB,WACnBN,EAAWC,MAMVC,KCVF,SAASK,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,MAAOR,EAAa,EAAbA,WAC7B,OACI,6BACKQ,EAAMC,KAAI,SAACV,GAAD,OACP,cAACD,EAAD,CAAwBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKE,S,YCH9BS,EAAM,gBAIL,SAASC,IAEZ,MAA0BC,mBAAS,CAC3B,CAAEX,GAAG,EAAGC,KAAK,UAAWC,WAAW,KAD3C,mBAAOK,EAAP,KAAcK,EAAd,KAIMC,EAAaC,mBAEnBC,qBAAU,WACNC,aAAaC,QAAQR,EAAKS,KAAKC,UAAUZ,MAC3C,CAACA,IAEHQ,qBAAU,WACN,IAAMK,EAAaF,KAAKG,MAAML,aAAaM,QAAQb,IAC/CW,GACAR,EAASQ,KAEd,IAyBH,OACI,eAAC,WAAD,WACI,cAACd,EAAD,CAAUC,MAAOA,EAAOR,WAzBb,SAACC,GAChB,IAAMuB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAC1B,GAAD,OAASA,EAAKE,KAAOA,KAChDF,EAAKI,WAAaJ,EAAKI,UACvBU,EAASW,MAsBL,uBAAOE,IAAMZ,EAAaV,KAAK,OAAOuB,YAAY,gBAClD,wBAAQC,QApBK,WACjB,IAAM1B,EAAOY,EAAYe,QAAQC,MACvB,KAAP5B,IAEHW,GAAS,SAACkB,GACN,MAAM,GAAN,mBAAUA,GAAV,CAAqB,CAAC9B,GAAI+B,cAAU9B,OAAMC,WAAW,QAGzDW,EAAYe,QAAQC,MAAO,OAYvB,eACA,wBAAQF,QAVK,WACjB,IAAMJ,EAAShB,EAAMyB,QAAO,SAAClC,GAAD,OAASA,EAAKI,aAC1CU,EAASW,IAQL,eACA,sDAAyBhB,EAAMyB,QAAO,SAAClC,GAAD,OAAUA,EAAKI,aAAW+B,aCpD5EC,IAASC,OAAQ,cAAEzB,EAAF,IAAY0B,SAASC,eAAe,W","file":"static/js/main.f7b46fbd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function TodoItem({todo, toggleTodo}) {\r\n\r\n    const {id, task, completed}=todo;\r\n\r\n    const handleTodoClick= () => {\r\n        toggleTodo(id);\r\n    };\r\n\r\n    return (\r\n        <li>\r\n        <input type=\"checkbox\" checked={completed} onChange={handleTodoClick} /> \r\n        {task}\r\n        </li>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { TodoItem } from './TodoItem';\r\n\r\nexport function TodoList({todos, toggleTodo}) {\r\n    return (\r\n        <ul>\r\n            {todos.map((todo)=>(\r\n                <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n","import {TodoList} from './components/TodoList';\r\nimport React, {useState, Fragment, useRef, useEffect} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst KEY = \"todoApp.todos\"\r\n\r\n\r\n\r\nexport function App(){\r\n\r\n    const [todos, setTodos] = useState([\r\n            { id:1, task:\"Tarea 1\", completed: false},\r\n    ]);\r\n\r\n    const todoTaskRef= useRef();\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(KEY, JSON.stringify(todos))\r\n    },[todos]);\r\n\r\n    useEffect(()=>{\r\n        const storedTodos= JSON.parse(localStorage.getItem(KEY));\r\n        if (storedTodos){\r\n            setTodos(storedTodos);\r\n        }\r\n    }, []);\r\n\r\n    const toggleTodo = (id) => {\r\n        const newTodos = [...todos];\r\n        const todo = newTodos.find((todo)=> todo.id === id);\r\n        todo.completed = !todo.completed;\r\n        setTodos(newTodos);\r\n    };\r\n    \r\n    const handleTodoAdd= () =>{\r\n        const task = todoTaskRef.current.value;\r\n        if(task==='') return;\r\n\r\n        setTodos((prevTodos)=>{\r\n            return[...prevTodos, {id: uuidv4(), task, completed: false}];\r\n        });\r\n\r\n        todoTaskRef.current.value= null;\r\n    };\r\n\r\n    const handleClearAll=()=>{\r\n        const newTodos=todos.filter((todo)=>!todo.completed);\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TodoList todos={todos} toggleTodo={toggleTodo}/>\r\n            <input ref ={todoTaskRef} type=\"text\" placeholder=\"Nueva tarea\" />\r\n            <button onClick={handleTodoAdd}>+</button>\r\n            <button onClick={handleClearAll}>-</button>\r\n            <div>Tareas por hacer = {todos.filter((todo)=> !todo.completed).length}</div>\r\n        </Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render( < App / > , document.getElementById(\"root\"));"],"sourceRoot":""}